<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 引入配置文件 -->
	<context:property-placeholder location="application-dev.properties" />
	<!-- 
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath*:/application-dev.properties</value>
            </list>
        </property>
    </bean>
	 -->

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
	</bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
    </bean>

	<!--创建数据映射器，数据映射器必须为接口
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.lex.webside.showcase.mybatis_spring.UserMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<bean id="groupMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.lex.webside.showcase.mybatis_spring.GroupMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
    <!-- 让MapperScannerConfigurer去自动扫描所有的mapper接口！ -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lex.showcase.mybatis_spring"/>
    </bean>

<!-- 	<bean id="userDaoImpl2" class="com.lex.webside.showcase.mybatis_spring.UserDaoImpl2">
		<property name="userMapper" ref="userMapper" /> -->

		<!-- src/main/java与src/test/java下的com.asm.dao包下与Spring AOP相关的demo（通过ProxyTest.java类来测试） 
		<bean id="userDaoImpl" class="com.asm.dao.impl.UserDaoImpl" />
		<bean id="theInterceptor" class="com.asm.dao.impl.factory.TheInterceptor" />-->

		<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
		<!-- <context:component-scan base-package="com.asm" /> -->

	<!-- </bean> -->

	<bean id="user" class="com.lex.showcase.spring.User">
		<!--<constructor-arg name="name" value="Tom"/>
		<constructor-arg name="age" value="16"/>-->
		<property name="name" value="Tom"/>
		<property name="age" value="16"/>
	</bean>

		<!--<aop:aspectj-autoproxy />-->
</beans>
