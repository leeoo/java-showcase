<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.lex.webside.showcase.mybatis_spring.GroupMapper">
	<!--
		获取用户: 输出直接映射到对象, login_name列要"as loginName"以方便映射 ,team_id as "team.id"创建team对象并赋值
	-->
	<select id="get" parameterType="int" resultType="Group">
		select id, name, description
		from groups
		where id=#{id}
	</select>
	
	<resultMap id="group" type="Group">
	   <id column="id" property="id"/>
	   <result column="name" property="name"/>
	</resultMap>
	
	<resultMap id="groupUserList" type="User">
	   <id column="id" property="id"/>
	   <result property="name" column="name"/>
	   <result property="loginName" column="login_name"/>
	   <association property="group" javaType="Group" resultMap="group"/>
	</resultMap>
	
	<select id="getGroupUsers" parameterType="int" resultMap="groupUserList">
	   select users.id, users.name, users.login_name,
	       groups.id, groups.name, groups.description
	   from users, groups
	   where groups.id = users.group_id and groups.id = #{id}
	</select>
	
	<!--
	   TODO
		获取用户列表: 输出直接映射到对象, login_name列要"as loginName"以方便映射 ,team_id as "team.id"创建team对象并赋值
	<select id="findAll" resultType="User">
		select id, name, email,
		login_name as loginName,
		team_id as "team.id"
		from ss_user
	</select>
	-->

	<!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象
	<select id="search" parameterType="map" resultType="User">
		select id, name, email,
		login_name as loginName,
		team_id as "team.id"
		from ss_user
		<where>
			<if test="loginName != null">
				login_name=#{loginName}
			</if>
			<if test="name != null">
				and name=#{name}
			</if>
		</where>
	</select> -->

	<!-- 插入用户： 1.由数据库生成id并赋值到user对象 2.输入用对象, 嵌套属性表达式#{team.id}
	<insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		insert into ss_user (
		login_name, name, password, email, team_id)
		values (
		#{loginName}, #{name}, #{password}, #{email},
		#{team.id})
	</insert> -->
	
	<!-- 删除用户
	<delete id="delete" parameterType="int">
	     delete from ss_user where id=#{id}
	</delete> -->
</mapper> 
